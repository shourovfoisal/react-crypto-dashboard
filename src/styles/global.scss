@import "variables";
@import "responsive";

html * {
  font-family: 'Inter', sans-serif;
}

body {
  // color: $main-color;
  color: $black;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: inherit;
}

// styles related to App.tsx

.main {
  display: flex;
  min-height: 100vh;
}

.container {
  flex: 1;
}

.contentContainer {
  margin: 1.5rem;
}


// THEME

.bgWhite {
  background-color: $white;
}

.bgDark {
  background-color: $bg-dark;
}

.bgLessDark {
  background-color: $bg-less-dark;
}

.bgPrimary {
  background-color: $bg-primary;
}

.bgHoverPrimary:hover {
  background-color: $bg-primary;
}

.bgPrimaryDarker {
  background-color: $bg-primary-darker;
}

.bgHoverPrimaryDarker:hover {
  background-color: $bg-primary-darker;
}

.bgHoverWhiteDimmed:hover {
  background-color: $white-dimmed;
}

.bgHoverLessDark:hover {
  background-color: $bg-less-dark;
}

.bgLight {
  background-color: $bg-light;
}

.bgRed {
  background-color: $red;
}

.bgImmediateDescendantsWhite>* {
  background-color: $white;
}

.bgImmediateDescendantsLessDark>* {
  background-color: $bg-less-dark;
}

.colorBlack {
  color: $black;
}

.colorWhite {
  color: $white;
}

.colorWhiteDimmed {
  color: $white-dimmed;
}

.colorPrimary {
  color: $primary;
}

.colorGray {
  color: $gray;
}

.colorDarkGray {
  color: $dark-gray;
}

.colorLightGray {
  color: $light-gray;
}

.colorPlaceholderGray::placeholder {
  color: $gray;
}

.colorPlaceholderLightGray::placeholder {
  color: $light-gray;
}

.colorHoverPrimary:hover {
  color: $primary;
}

.borderGray {
  border: 1px solid $gray;
}

.borderDarkGray {
  border: 1px solid $dark-gray;
}

.borderLightGray {
  border: 1px solid $light-gray;
}

.borderRightGray {
  border-right: 2px solid $gray;
}

.borderRightDarkGray {
  border-right: 2px solid $dark-gray;
}

// Shadow
.softShadow {
  box-shadow: $soft-shadow;
}

// Utilities
.whitespaceNowrap {
  white-space: nowrap;
}

.selectNone {
  user-select: none;
}